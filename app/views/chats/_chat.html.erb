


<div id="apple" data-room-id="<%= @room.id %>"></div>
<div class="message-box">
<% if chat.user_id == current_user.id %>
    <div class="archive-capture">
      <div class="current-user-box">
        <div class="message-flame" id="archive-capture-<%= chat.id %>">
          <div class="created-date">
           <div class="name-and-created-date">
        <div class="created-date"><%= l chat.created_at %></div>
          <div class="message-user-name">
          <%= "　" %>
          <%= current_user.nickname %>
          </div>
        </div>
          </div>
          <div class="all-messages-box">
            <%= simple_format(chat.message) %>
          </div>
          <div class="image0">
            <%= image_tag(chat.image, class: 'message-image', crossOrigin: 'anonymous') if chat.image.attached? %>
          </div>
        </div>
      </div>
      <div class="message-bottom-box">
        <div class="delete-button">
          <%= link_to 'Delete', room_chat_path(@room, chat), data: { turbo_method: :delete } %>
        </div>
        <button onclick="captureChat(<%= chat.id %>)" class="capture-button">Archive</button>
      </div>
    </div>
  <div class="user1-box">
  </div>
  <div class="user2-box">
  </div>
<% elsif (current_user.id == @room_users[0].user_id && chat.user_id == @room_users[1].user_id) || chat.user_id == @room_users[0].user_id %>
  <div class="current-user-box">
  </div>
  <div class="archive-capture">
  <div class="user1-box">
        <div class="message-flame" id="archive-capture-<%= chat.id %>">
        <div class="name-and-created-date">
        <div class="created-date"><%= l chat.created_at %></div>
          <div class="message-user-name">
          <%= "　" %>
          <% if current_user.id == @room_users[0].user_id %>
          <%= @room_users[1].user.nickname %>
          <% else %>
          <%= @room_users[0].user.nickname %>
          <% end %>
          </div>
        </div>
        <div class="all-messages-box"><%= simple_format(chat.message) %></div>
        <div class="image1"><%= image_tag(chat.image, class: 'message-image', crossOrigin: 'anonymous') if chat.image.attached? %></div>
  </div></div><div class="message-bottom-box-user1"><button onclick="captureChat(<%= chat.id %>)" class="capture-button">Archive</button></div>
  </div>
  <div class="user2-box">
  </div>

<% else %>
  <div class="current-user-box">
  </div>
  <div class="user1-box">
  </div>

  <div class="archive-capture">
  <div class="user2-box">
          <div class="message-flame" id="archive-capture-<%= chat.id %>">
           <div class="name-and-created-date">
        <div class="created-date"><%= l chat.created_at %></div>
         <div class="message-user-name">
          <%= "　" %>
          <% if current_user.id == @room_users[2].user_id %>
          <%= @room_users[1].user.nickname %>
          <% else %>
          <%= @room_users[2].user.nickname %>
          <% end %>
          </div>
        </div>
        <div class="all-messages-box"><%= simple_format(chat.message) %></div>
        <div class="image2"><%= image_tag(chat.image, class: 'message-image', crossOrigin: 'anonymous') if chat.image.attached? %></div>
   </div></div><div class="message-bottom-box-user2"><button onclick="captureChat(<%= chat.id %>)" class="capture-button">Archive</button></div>
  </div>
<% end %>
</div>




<script>
function captureChat(chatId) {
    var elementId = "archive-capture-" + chatId;
    var element = document.getElementById(elementId);
    var images = element.getElementsByTagName('img');
    var loadedImagesCount = 0;

    // 画像URLからBlobを取得して、Blob URLを元の画像のsrcに設定
    function fetchAndReplaceImage(imageElement) {
        fetch(imageElement.src)
            .then(response => response.blob())
            .then(blob => {
                const blobUrl = URL.createObjectURL(blob);
                imageElement.src = blobUrl;
                loadedImagesCount++;
                if (loadedImagesCount === images.length) {
                    captureCanvas();
                }
            }).catch(error => {
                console.error('Error fetching image:', error);
                loadedImagesCount++;
                if (loadedImagesCount === images.length) {
                    captureCanvas();
                }
            });
    }

    // すべての画像がBlobとして再設定された後にhtml2canvasを実行
    function captureCanvas() {
        html2canvas(element, { useCORS: true }).then(canvas => {
            var image = canvas.toDataURL("image/jpeg");
            let roomElement = document.getElementById('apple');
            let roomId = roomElement.dataset.roomId;

            fetch(`/rooms/${roomId}/save-image`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                },
                body: JSON.stringify({
                    image: image,
                    supplement: '',  // サンプル値
                    display_order: 1  // サンプル値
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                location.reload(); // 成功したらページをリロード
            })
            .catch(error => {
                console.error('Error:', error);
                location.reload(); // エラーが発生した場合もページをリロード
            });
        });
    }

    // すべての画像に対してBlob取得と置き換えを実行
    if (images.length === 0) {
        captureCanvas(); // 画像がなければ直接Canvasをキャプチャ
    } else {
        for (let img of images) {
            fetchAndReplaceImage(img);
        }
    }
}
</script>





<%# アーカイブせずに、ユーザーのディレクトリに保存する場合のコード %>
<%# <script>
function capture(chatId) {
    var elementId = "archive-capture-" + chatId;
    html2canvas(document.getElementById(elementId)).then(canvas => {
        // キャンバスを画面に表示するオプション（もし表示したい場合）
        document.body.appendChild(canvas);

        var image = canvas.toDataURL("image/png");
        var link = document.createElement('a');
        link.href = image;
        link.download = 'capture-' + chatId + '.png'; // ファイル名にチャットIDを追加
        link.click(); // 画像としてダウンロード
    });
}
</script> %>


